<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <Style x:Key="BtnStyle"
       TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border"
                        BorderThickness="0"
                        CornerRadius="10">
                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackground" Color="White"/>
                        </Border.Background>
                        <Grid>
                            <Border 
                                x:Name="Indicator"
                                Height="35"
                                Width="4"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Background="#82BBB2"
                                Visibility="Collapsed"
                                CornerRadius="3"/>
                            <ContentPresenter/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                             Value="True">
                            <Setter Property="Visibility"
                                TargetName="Indicator"
                                Value="Visible"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Border.MouseEnter"
                                  SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                Storyboard.TargetProperty="Color"
                                                From="White"
                                                To="#C1F2B0"
                                                Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Border.MouseLeave" SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                Storyboard.TargetProperty="Color"
                                                From="#C1F2B0"
                                                To="White"
                                                Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsChecked"
                             Value="True">

                            <Setter Property="Background"
                                TargetName="border"
                                Value="#C1F2B0"/>

                            <Setter Property="Visibility"
                                TargetName="Indicator"
                                Value="Visible"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyPrimaryButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LightBlackColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource White}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"></Setter>
                <Setter Property="Background" Value="{StaticResource White}"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource White}"></Setter>
                <Setter Property="Background" Value="{StaticResource PrimaryColor}"></Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="MyBlueButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background" Value="{DynamicResource BlueSky}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LightBlackColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource White}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource BlueSky}"></Setter>
                <Setter Property="Background" Value="{StaticResource White}"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource White}"></Setter>
                <Setter Property="Background" Value="{StaticResource BlueSky}"></Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="MyOrangeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background" Value="{DynamicResource Orange}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LightBlackColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource White}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Orange}"></Setter>
                <Setter Property="Background" Value="{StaticResource White}"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource White}"></Setter>
                <Setter Property="Background" Value="{StaticResource Orange}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyBlackButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background" Value="{DynamicResource LightBlackColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LightBlackColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource White}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource LightBlackColor}"></Setter>
                <Setter Property="Background" Value="{StaticResource White}"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource White}"></Setter>
                <Setter Property="Background" Value="{StaticResource LightBlackColor}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>