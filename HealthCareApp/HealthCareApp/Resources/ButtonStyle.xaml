<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">
    <Style x:Key="BtnStyle"
       TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border"
                        BorderThickness="0"
                        CornerRadius="10">
                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackground" Color="White"/>
                        </Border.Background>
                        <Grid>
                            <Border 
                                x:Name="Indicator"
                                Height="35"
                                Width="4"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Background="#82BBB2"
                                Visibility="Collapsed"
                                CornerRadius="3"/>
                            <ContentPresenter/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                             Value="True">
                            <Setter Property="Visibility"
                                TargetName="Indicator"
                                Value="Visible"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Border.MouseEnter"
                                  SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                Storyboard.TargetProperty="Color"
                                                From="White"
                                                To="#C1F2B0"
                                                Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Border.MouseLeave" SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                Storyboard.TargetProperty="Color"
                                                From="#C1F2B0"
                                                To="White"
                                                Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsChecked"
                             Value="True">

                            <Setter Property="Background"
                                TargetName="border"
                                Value="#C1F2B0"/>

                            <Setter Property="Visibility"
                                TargetName="Indicator"
                                Value="Visible"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioBtnStyle"
    TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border"
                     BorderThickness="0"
                     CornerRadius="10">
                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackground" Color="#F0FFF0"/>
                        </Border.Background>
                        <Grid>
                            <ContentPresenter/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                          Value="True">
                        </Trigger>
                        <EventTrigger RoutedEvent="Border.MouseEnter"
                               SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                             Storyboard.TargetProperty="Color"
                                             From="White"
                                             To="#F0FFF0"
                                             Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Border.MouseLeave" SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                             Storyboard.TargetProperty="Color"
                                             From="#F0FFF0"
                                             To="White"
                                             Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsChecked"
                          Value="True">

                            <Setter Property="Background"
                             TargetName="border"
                             Value="#C1F2B0"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyPrimaryButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LightBlackColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource White}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"></Setter>
                <Setter Property="Background" Value="{StaticResource White}"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource White}"></Setter>
                <Setter Property="Background" Value="{StaticResource PrimaryColor}"></Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="MyBlueButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background" Value="{DynamicResource BlueSky}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LightBlackColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource White}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource BlueSky}"></Setter>
                <Setter Property="Background" Value="{StaticResource White}"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource White}"></Setter>
                <Setter Property="Background" Value="{StaticResource BlueSky}"></Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="MyOrangeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background" Value="{DynamicResource Orange}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LightBlackColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource White}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Orange}"></Setter>
                <Setter Property="Background" Value="{StaticResource White}"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource White}"></Setter>
                <Setter Property="Background" Value="{StaticResource Orange}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyRedButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background" Value="{DynamicResource Red}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LightBlackColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource White}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Red}"></Setter>
                <Setter Property="Background" Value="{StaticResource White}"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource White}"></Setter>
                <Setter Property="Background" Value="{StaticResource Red}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyBlackButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background" Value="{DynamicResource LightBlackColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LightBlackColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource White}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource LightBlackColor}"></Setter>
                <Setter Property="Background" Value="{StaticResource White}"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource White}"></Setter>
                <Setter Property="Background" Value="{StaticResource LightBlackColor}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#222528"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowDetailsVisibilityMode" Value="Visible"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="ColumnWidth" Value="*"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{DynamicResource Transparent}" BorderBrush="{StaticResource White}" BorderThickness="1" CornerRadius="0" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}" 
                                        Focusable="false" 
                                        Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" 
                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                        Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" 
                                                                Grid.Column="1" 
                                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                        CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                        Grid.ColumnSpan="2" 
                                                        Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" 
                                           Grid.Column="2" 
                                           Maximum="{TemplateBinding ScrollableHeight}" 
                                           Orientation="Vertical" 
                                           Grid.Row="1" 
                                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                        <Grid Grid.Column="1" 
                                      Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" 
                                               Grid.Column="1" 
                                               Maximum="{TemplateBinding ScrollableWidth}" 
                                               Orientation="Horizontal" 
                                               Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                               ViewportSize="{TemplateBinding ViewportWidth}"
                                               Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" 
                       Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" 
                       Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" 
                Value="false"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DataGridColumnHeaderStyle" 
   TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="BorderBrush" 
        Value="{Binding HorizontalGridLinesBrush, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
        <Setter Property="BorderThickness"
        Value="{Binding GridLinesVisibility, Converter={StaticResource GridLinesVisibilityBorderToThicknessConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
        <Setter Property="Foreground" 
        Value="{DynamicResource MaterialDesignColumnHeader}"/>
        <Setter Property="Padding"
        Value="{Binding (wpf:DataGridAssist.ColumnHeaderPadding), RelativeSource={RelativeSource Mode=Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">

                    <Grid Background="{DynamicResource Transparent}">
                        <Border Background="{StaticResource PrimaryColor}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Padding="{TemplateBinding Padding}">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                <ContentPresenter RecognizesAccessKey="True"
                                              
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper" 
                       HorizontalAlignment="Left" 
                       Style="{StaticResource MaterialDesignGridColumnHeaderGripper}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" 
                       HorizontalAlignment="Right" 
                       Style="{StaticResource MaterialDesignGridColumnHeaderGripper}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TextBlock.FontWeight" 
        Value="Bold"/>
        <Setter Property="VerticalContentAlignment" 
        Value="Center"/>
    </Style>
    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" 
        Value="{StaticResource BackGround}"/>
        <Setter Property="Margin"
        Value="0 5 0 0"/>
        <Setter Property="SnapsToDevicePixels" 
        Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" 
                    Padding="0 10" 
                    Background="{TemplateBinding Background}" 
                    BorderThickness="0"
                    SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1" 
                                            ItemsPanel="{TemplateBinding ItemsPanel}" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1" 
                                              Grid.Row="1" 
                                              Visibility="{TemplateBinding DetailsVisibility}"/>
                            <DataGridRowHeader Grid.Column="0" 
                                       Grid.RowSpan="2" 
                                       Grid.Row="0" 
                                       Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" 
        Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="#d50000" 
                       Margin="2,0,0,0" 
                       Text="!" 
                       VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" 
                       Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background"
                Value="{StaticResource PastelGreen}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DataGridCellStyle" 
   TargetType="{x:Type DataGridCell}">
        <Setter Property="Background"
        Value="Transparent"/>
        <Setter Property="VerticalAlignment" 
        Value="Center"/>
        <Setter Property="FontSize"
        Value="14"/>
        <Setter Property="Margin"
        Value="15 0"/>
        <Setter Property="FocusVisualStyle" 
        Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" 
                        BorderThickness="0"
                        SnapsToDevicePixels="True"/>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>